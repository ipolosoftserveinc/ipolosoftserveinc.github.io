/**
 * 1. Протестувати додавання числа 0.1 до числа 0.2 із результатом 0.3.
 */
describe('1. Протестувати додавання числа 0.1 до числа 0.2 із результатом 0.3.', () => {
    it('should be 0.3', () => {
        expect((0.1 + 0.2).toFixed(1)).toBe('0.3');
    });
});

/**
 * 2. Виконати тестування заданого масиву userList.
 * 1) Протестувати чи є в масиві елемент “admin”
 * 2) Протестувати чи перший елемент в масиві “Nick”
 * 3) Протестувати чи останній елемент в масиві “new_user_2”
 * 4) Протестувати твердження, що довжина масиву дорівнює 5
 * 5) Протестувати твердження, що 3-ій елемент масиву має тип string
 * 6) Протестувати твердження, що 8-го елементу масиву немає.
 * const userList = ['Nick', 'Kate', 'quest123', 'admin', 'new_user_2'];
 */
describe('Виконати тестування заданого масиву userList.', () => {
    const userList = ['Nick', 'Kate', 'quest123', 'admin', 'new_user_2'];

    it('1) Протестувати чи є в масиві елемент “admin”',  () => {
        expect(userList.includes('admin')).toBeTruthy();
    });

    it('2) Протестувати чи перший елемент в масиві “Nick”',  () => {
        expect(userList[0]).toBe('Nick');
    });

    it('3) Протестувати чи останній елемент в масиві “new_user_2”', () => {
        expect(userList[userList.length - 1]).toBe('new_user_2');
    });

    it('4) Протестувати твердження, що довжина масиву дорівнює 5', () => {
        expect(userList.length).toBe(5)
    });

    it('5) Протестувати твердження, що 3-ій елемент масиву має тип string', () => {
        expect(typeof userList[2]).toBe('string');
    });

    it('6) Протестувати твердження, що 8-го елементу масиву немає.', () => {
        expect(userList.length === 5).toBeTruthy();
    });
});