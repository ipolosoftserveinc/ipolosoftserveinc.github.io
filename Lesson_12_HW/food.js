/**
 * 4. Створити файл food.js в якому міститься функція filterFoodPrice(food, min, max), яка фільтрує масив продуктів по ціні.
 * Причому food – це масив об’єктів з типом і ціною продукту, min - це встановлена мінімальна ціна продукту, max - це встановлена максимальна ціна продукту Виконати експорт функції.
 *
 * function filterFoodPrice(food, min, max) {
 * return food.filter(element => element.price >= min && element.price <= max);
 * }
 *
 * const food = [
 * { kind: 'potato', price: 10 },
 * { kind: 'bred', price: 16 },
 * { kind: 'pepper', price: 27 },
 * { kind: 'banana', price: 32 },
 * { kind: 'lemon', price: 50 }
 * ];
 *
 * Створити файл food.test.js в якому потрібно протестувати функцію для заданого масиву food з аргументами min = 12, max = 40.
 * 1) Протестувати чи очікувана довжина відсортованого масиву 3, відповідає реальній.
 * 2) Протестувати чи відсортований масив містить об’єкт { kind: 'pepper', price: 27 }.
 * 3) Протестувати чи відсортований масив містить 2, 3 і 4 елементи вихідного масиву food.
 * 4) Протестувати чи властивість price 1-го елемента відсортованого масиву є більшою значення min.
 * 5) Протестувати чи властивість price 3-го елемента відсортованого масиву є меншою значення max.
 * 6) Протестувати твердження про те, що відсортований масив не містить елемента { kind: 'lemon', price: 50 }.
 * 7) Запропонуйте і протестуйте щонайменше 2-3 своїх твердження для заданої функції і масиву food.
*/
function filterFoodPrice(food, min, max) {
    return food.filter(element => element.price >= min && element.price <= max);
}

module.exports = {filterFoodPrice};